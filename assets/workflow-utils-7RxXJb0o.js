var L=Object.defineProperty;var E=(m,s,t)=>s in m?L(m,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):m[s]=t;var g=(m,s,t)=>E(m,typeof s!="symbol"?s+"":s,t);import{X as I,c as k,ad as P}from"./vue-vendor--w6teXnU.js";const p=I({workflows:[],customTasks:[],instrumentConfig:{Centrifuge:{nests:1},"Liquid Handler":{nests:2},"Plate Reader":{nests:1},"Plate Sealer":{nests:1},"Plate Peeler":{nests:1},Incubator:{nests:3},"Plate Shaker":{nests:2},"Bulk Dispenser":{nests:1},Storage:{nests:99}},schedule:[],metrics:{totalTime:0,conflicts:0,utilization:0},isOptimizing:!1});function C(){const m=()=>{try{const c={workflows:p.workflows,customTasks:p.customTasks,instrumentConfig:p.instrumentConfig};localStorage.setItem("workflow-optimizer-state",JSON.stringify(c))}catch{}},s=()=>{try{const d=localStorage.getItem("workflow-optimizer-state");if(d){const u=JSON.parse(d);u.workflows&&(p.workflows=u.workflows),u.customTasks&&(p.customTasks=u.customTasks),u.instrumentConfig&&Object.assign(p.instrumentConfig,u.instrumentConfig)}}catch{}const c=p.workflows.some(d=>!d.name||d.name.toLowerCase().includes("new workflow")||d.name.trim()==="");(p.workflows.length===0||c)&&(p.workflows=l(),m())},t=c=>{const d={...c,id:`custom-${Date.now()}`};return p.customTasks.push(d),m(),d},a=c=>{const d=p.customTasks.findIndex(u=>u.id===c);d!==-1&&(p.customTasks.splice(d,1),m())},n=k(()=>c=>p.customTasks.filter(d=>d.type===c)),i=c=>{p.workflows=c,m()},r=c=>{p.schedule=c},o=c=>{Object.assign(p.metrics,c)},l=()=>[{id:"workflow-elisa",name:"ELISA Cytokine Detection",priority:1,isEditingName:!1,editName:"",lanes:[{id:"lane-elisa-1",name:"Control Samples",isEditingName:!1,editName:"",steps:[{id:"step-1",type:"Liquid Handler",task:"Prime Tips",duration:3},{id:"step-2",type:"Liquid Handler",task:"Transfer",duration:15},{id:"step-3",type:"Plate Sealer",task:"Heat Seal",duration:3},{id:"step-4",type:"Incubator",task:"Incubate",duration:120},{id:"step-5",type:"Plate Peeler",task:"Peel Seal",duration:2},{id:"step-6",type:"Liquid Handler",task:"Wash Tips",duration:8},{id:"step-7",type:"Plate Reader",task:"Read Absorbance",duration:4}]},{id:"lane-elisa-2",name:"Test Samples",isEditingName:!1,editName:"",steps:[{id:"step-8",type:"Liquid Handler",task:"Prime Tips",duration:3},{id:"step-9",type:"Liquid Handler",task:"Transfer",duration:18},{id:"step-10",type:"Plate Sealer",task:"Heat Seal",duration:3},{id:"step-11",type:"Incubator",task:"Incubate",duration:120},{id:"step-12",type:"Plate Peeler",task:"Peel Seal",duration:2},{id:"step-13",type:"Liquid Handler",task:"Wash Tips",duration:10},{id:"step-14",type:"Plate Reader",task:"Read Absorbance",duration:4}]}]},{id:"workflow-mtt",name:"MTT Cell Viability Assay",priority:2,isEditingName:!1,editName:"",lanes:[{id:"lane-mtt-1",name:"Vehicle Control",isEditingName:!1,editName:"",steps:[{id:"step-15",type:"Storage",task:"Get",duration:2},{id:"step-16",type:"Liquid Handler",task:"Transfer",duration:12},{id:"step-17",type:"Incubator",task:"Incubate",duration:240},{id:"step-18",type:"Bulk Dispenser",task:"Dispense Reagent",duration:8},{id:"step-19",type:"Plate Shaker",task:"Orbital Mix",duration:5},{id:"step-20",type:"Incubator",task:"Incubate",duration:180},{id:"step-21",type:"Plate Reader",task:"Read Absorbance",duration:4}]},{id:"lane-mtt-2",name:"Drug Treatment",isEditingName:!1,editName:"",steps:[{id:"step-22",type:"Storage",task:"Get",duration:2},{id:"step-23",type:"Liquid Handler",task:"Transfer",duration:15},{id:"step-24",type:"Incubator",task:"Incubate",duration:240},{id:"step-25",type:"Bulk Dispenser",task:"Dispense Reagent",duration:8},{id:"step-26",type:"Plate Shaker",task:"Orbital Mix",duration:5},{id:"step-27",type:"Incubator",task:"Incubate",duration:180},{id:"step-28",type:"Plate Reader",task:"Read Absorbance",duration:4}]}]},{id:"workflow-pcr",name:"PCR Setup & Thermal Cycling",priority:3,isEditingName:!1,editName:"",lanes:[{id:"lane-pcr-1",name:"Target Gene",isEditingName:!1,editName:"",steps:[{id:"step-29",type:"Storage",task:"Get",duration:2},{id:"step-30",type:"Liquid Handler",task:"Prime Tips",duration:3},{id:"step-31",type:"Liquid Handler",task:"Transfer",duration:20},{id:"step-32",type:"Centrifuge",task:"Spin",duration:2},{id:"step-33",type:"Storage",task:"Store",duration:2},{id:"step-34",type:"Plate Reader",task:"Read Fluorescence",duration:6}]},{id:"lane-pcr-2",name:"Reference Gene",isEditingName:!1,editName:"",steps:[{id:"step-35",type:"Storage",task:"Get",duration:2},{id:"step-36",type:"Liquid Handler",task:"Prime Tips",duration:3},{id:"step-37",type:"Liquid Handler",task:"Transfer",duration:22},{id:"step-38",type:"Centrifuge",task:"Spin",duration:2},{id:"step-39",type:"Storage",task:"Store",duration:2},{id:"step-40",type:"Plate Reader",task:"Read Fluorescence",duration:6}]}]}],f=()=>{p.workflows=[],p.customTasks=[],p.schedule=[],p.metrics={totalTime:0,conflicts:0,utilization:0},p.isOptimizing=!1},h=()=>{try{localStorage.removeItem("workflow-optimizer-state")}catch{}f(),p.workflows=l(),m()};return{...P(p),saveState:m,loadState:s,addCustomTask:t,removeCustomTask:a,getCustomTasksForInstrument:n,updateWorkflows:i,updateSchedule:r,updateMetrics:o,resetState:f,clearStorageAndReset:h}}const e=I({isModalOpen:!1,currentStep:"workflow-selection",selectedWorkflowId:null,selectedLaneId:null,pendingTask:null,lastSelectedWorkflowId:null,lastSelectedLaneId:null,openedFromFAB:!1,openedFromPreview:!1});function F(){const m=u=>{e.pendingTask=u,e.openedFromFAB=!0,e.openedFromPreview=!1,e.lastSelectedWorkflowId&&e.lastSelectedLaneId?(e.selectedWorkflowId=e.lastSelectedWorkflowId,e.selectedLaneId=e.lastSelectedLaneId,e.currentStep="lane-editor"):e.lastSelectedWorkflowId?(e.selectedWorkflowId=e.lastSelectedWorkflowId,e.currentStep="lane-selection"):e.currentStep="workflow-selection",e.isModalOpen=!0},s=(u,y)=>{e.pendingTask=null,e.openedFromFAB=!1,e.openedFromPreview=!0,u&&y?(e.selectedWorkflowId=u,e.selectedLaneId=y,e.currentStep="lane-editor"):u?(e.selectedWorkflowId=u,e.currentStep="lane-selection"):e.currentStep="workflow-selection",e.isModalOpen=!0},t=u=>{e.pendingTask=null,e.openedFromFAB=!1,e.openedFromPreview=!0,e.selectedWorkflowId=u,e.selectedLaneId=null,e.currentStep="multi-lane-editor",e.isModalOpen=!0},a=()=>{e.isModalOpen=!1,e.pendingTask=null,e.openedFromFAB=!1,e.openedFromPreview=!1},n=()=>{e.currentStep="workflow-selection",e.selectedWorkflowId=null,e.selectedLaneId=null},i=u=>{console.log("useModalWorkflowEditor - goToLaneSelection called with:",u),e.selectedWorkflowId=u,e.selectedLaneId=null,e.currentStep="lane-selection",console.log("useModalWorkflowEditor - state after transition:",{selectedWorkflowId:e.selectedWorkflowId,currentStep:e.currentStep})},r=u=>{e.selectedLaneId=u,e.currentStep="lane-editor",e.lastSelectedWorkflowId=e.selectedWorkflowId,e.lastSelectedLaneId=u},o=()=>{switch(e.currentStep){case"lane-editor":e.currentStep="lane-selection",e.selectedLaneId=null;break;case"multi-lane-editor":e.currentStep="lane-selection";break;case"lane-selection":e.currentStep="workflow-selection",e.selectedWorkflowId=null;break;default:a()}},l=()=>{a()},f=()=>{e.lastSelectedWorkflowId=null,e.lastSelectedLaneId=null},h=k(()=>e.currentStep==="lane-selection"||e.currentStep==="lane-editor"),c=k(()=>{switch(e.currentStep){case"workflow-selection":return"Select Workflow";case"lane-selection":return"Select Lane";case"multi-lane-editor":return"Edit All Lanes";case"lane-editor":return"Edit Lane";default:return"Workflow Editor"}}),d=k(()=>e.lastSelectedWorkflowId!==null||e.lastSelectedLaneId!==null);return{isModalOpen:k(()=>e.isModalOpen),currentStep:k(()=>e.currentStep),selectedWorkflowId:k(()=>e.selectedWorkflowId),selectedLaneId:k(()=>e.selectedLaneId),pendingTask:k(()=>e.pendingTask),openedFromFAB:k(()=>e.openedFromFAB),openedFromPreview:k(()=>e.openedFromPreview),canGoBack:h,modalTitle:c,hasMemory:d,openFromFAB:m,openFromPreview:s,openMultiLaneEditor:t,closeModal:a,goToWorkflowSelection:n,goToLaneSelection:i,goToLaneEditor:r,goBack:o,completeWorkflow:l,clearMemory:f}}class b{constructor(s){g(this,"instrumentConfig");this.instrumentConfig=s}optimizeSchedule(s){if(!this.validateWorkflows(s))throw new Error("Invalid workflow configuration");const t=this.collectTasks(s);this.addLiquidHandlerDependencies(t),this.sortTasksByPriority(t);const a=this.initializeInstrumentAvailability(),n=this.scheduleTasks(t,a);this.detectConflicts(n);const i=this.calculateMetrics(n);return{schedule:n,metrics:i}}collectTasks(s){const t=[];return s.forEach(a=>{a.lanes.forEach(n=>{n.steps.forEach((i,r)=>{t.push({id:i.id,workflowId:a.id,workflowName:a.name,workflowPriority:a.priority,laneId:n.id,laneName:n.name,stepIndex:r,type:i.type,task:i.task,duration:i.duration,dependencies:n.steps.slice(0,r).map(o=>o.id)})})})}),t}addLiquidHandlerDependencies(s){const t=s.filter(n=>n.type==="Liquid Handler"),a={};t.forEach(n=>{a[n.workflowId]||(a[n.workflowId]=[]),a[n.workflowId].push(n)}),Object.values(a).forEach(n=>{if(n.length>1){const i=n.filter(r=>r.task.toLowerCase().includes("transfer"));i.length>0?i.forEach(r=>{const o=n.filter(l=>l.id!==r.id&&!l.task.toLowerCase().includes("transfer"));o.length>0?o.forEach(l=>{r.dependencies.includes(l.id)||r.dependencies.push(l.id),l.dependencies.includes(r.id)||l.dependencies.push(r.id)}):i.filter(f=>f.id!==r.id).forEach(f=>{r.dependencies.includes(f.id)||r.dependencies.push(f.id)})}):n.forEach(r=>{n.filter(l=>l.id!==r.id).map(l=>l.id).forEach(l=>{r.dependencies.includes(l)||r.dependencies.push(l)})})}})}sortTasksByPriority(s){s.sort((t,a)=>t.workflowPriority!==a.workflowPriority?t.workflowPriority-a.workflowPriority:t.laneId!==a.laneId?t.laneId.localeCompare(a.laneId):t.stepIndex-a.stepIndex)}initializeInstrumentAvailability(){const s={};return Object.entries(this.instrumentConfig).forEach(([t,a])=>{s[t]=Array(a.nests).fill(0)}),s}scheduleTasks(s,t){const a=[],n={},i={},r={};return s.forEach(o=>{let l=0;o.dependencies.forEach(w=>{n[w]&&(l=Math.max(l,n[w]))}),i[o.laneId]&&(l=Math.max(l,i[o.laneId])),o.type==="Liquid Handler"&&(l=this.adjustForLiquidHandlerSync(o,s,n,l));const f=o.type,h=t[f]||[0];let c=0,d=1/0;if(h.forEach((w,T)=>{const S=Math.max(l,w);S<d&&(d=S,c=T)}),d===1/0&&(d=l,c=0),o.stepIndex>0&&r[o.laneId]){const w=r[o.laneId];if(w.length>0){const T=w[w.length-1];d=Math.max(d,T.endTime);const S=t[f][c];d=Math.max(d,S)}}const u=1;t[f][c]=d+o.duration+u,n[o.id]=d+o.duration,i[o.laneId]=d+o.duration+u;const y={...o,startTime:d,endTime:d+o.duration,nest:c,instrument:`${f} ${c+1}`,conflict:!1};r[o.laneId]||(r[o.laneId]=[]),r[o.laneId].push(y),a.push(y)}),a}validateWorkflows(s){for(const t of s){if(t.lanes.length===0)return console.warn(`Workflow ${t.name} has no lanes`),!1;for(const a of t.lanes)if(a.steps.some(n=>n.duration<=0))return console.warn(`Invalid step duration in ${t.name}`),!1}return!0}adjustForLiquidHandlerSync(s,t,a,n){const i=t.filter(o=>o.workflowId===s.workflowId&&o.type==="Liquid Handler"&&(o.dependencies.includes(s.id)||s.dependencies.includes(o.id)));if(i.length===0)return n;let r=n;return i.forEach(o=>{o.dependencies.forEach(l=>{a[l]&&l!==s.id&&(r=Math.max(r,a[l]))})}),r}detectConflicts(s){s.forEach(a=>a.conflict=!1);const t={};s.forEach(a=>{const n=`${a.type}_${a.nest}`;t[n]||(t[n]=[]),t[n].push(a)}),Object.values(t).forEach(a=>{a.forEach((n,i)=>{a.forEach((r,o)=>{i!==o&&n.startTime<r.endTime&&r.startTime<n.endTime&&(n.conflict=!0,r.conflict=!0)})})})}calculateMetrics(s){const t=s.length>0?Math.max(...s.map(i=>i.endTime)):0,a=s.filter(i=>i.conflict).length/2;let n=0;if(t>0){const i=s.reduce((o,l)=>o+l.duration,0),r=Object.entries(this.instrumentConfig).reduce((o,[l,f])=>o+f.nests*t,0);n=Math.round(i/r*100)}return{totalTime:t,conflicts:a,utilization:n}}validateSchedule(s){const t=[],a=new Map(s.map(i=>[i.id,i]));s.forEach(i=>{i.dependencies.forEach(r=>{const o=a.get(r);o&&o.endTime>i.startTime&&t.push(`Task "${i.task}" starts before dependency "${o.task}" completes`)})});const n=s.filter(i=>i.conflict).length;return n>0&&t.push(`${n/2} scheduling conflicts detected`),{isValid:t.length===0,errors:t}}getBottleneckAnalysis(s){const t={};return s.forEach(n=>{const i=n.type;t[i]||(t[i]={totalTime:0,busyTime:0,tasks:0}),t[i].busyTime+=n.duration,t[i].tasks+=1,t[i].totalTime=Math.max(t[i].totalTime,n.endTime)}),Object.entries(t).map(([n,i])=>{var c;const r=((c=this.instrumentConfig[n])==null?void 0:c.nests)||1,o=i.totalTime*r,l=o>0?Math.round(i.busyTime/o*100):0,f=i.busyTime/i.tasks,h=i.totalTime-f;return{instrument:n,utilization:l,waitTime:Math.round(h)}}).sort((n,i)=>i.utilization-n.utilization)}}function v(m,s){return new b(s).optimizeSchedule(m)}export{C as a,v as o,F as u};
